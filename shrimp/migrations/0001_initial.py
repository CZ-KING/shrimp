# Generated by Django 3.1.2 on 2020-11-06 15:17

from django.db import migrations, models
import django.utils.timezone
import shrimp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(verbose_name='回答者ID')),
                ('username', models.CharField(db_index=True, default='匿名', max_length=20, verbose_name='昵称')),
                ('question_id', models.BigIntegerField(verbose_name='问题编号')),
                ('question_title', models.CharField(max_length=200, verbose_name='回答的问题标题')),
                ('content', models.CharField(max_length=4096, verbose_name='回答内容')),
                ('picture', models.CharField(max_length=200, verbose_name='回答者头像')),
                ('slogan', models.CharField(max_length=25, null=True, verbose_name='回答者简介')),
                ('status', models.SmallIntegerField(verbose_name='审核状态')),
                ('weight', models.IntegerField(default=1, verbose_name='权重')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='回答修改时间')),
                ('ct', models.DateTimeField(auto_now_add=True, verbose_name='回答时间')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_id', models.BigIntegerField(db_index=True, verbose_name='回答编号')),
                ('user_id', models.IntegerField(verbose_name='评论者ID')),
                ('comment', models.CharField(max_length=500, verbose_name='评论/回复内容')),
                ('comment_id', models.IntegerField(null=True, verbose_name='评论ID')),
                ('username', models.CharField(max_length=30, verbose_name='评论者昵称')),
                ('other_userid', models.IntegerField(null=True, verbose_name='回复者ID')),
                ('other_username', models.CharField(max_length=30, null=True, verbose_name='回复者昵称')),
                ('url_token', models.CharField(max_length=30, null=True, verbose_name='评论者url_token')),
                ('other_url_token', models.CharField(max_length=30, null=True, verbose_name='回复者url_token')),
                ('ct', models.DateTimeField(auto_now_add=True, verbose_name='评论/回复时间')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, default='匿名', max_length=20, verbose_name='昵称')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='标题')),
                ('description', models.CharField(blank=True, db_index=True, max_length=500, verbose_name='问题描述')),
                ('classification', models.CharField(db_index=True, max_length=200, verbose_name='问题分类')),
                ('userid', models.BigIntegerField(db_index=True, verbose_name='用户id')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='问题修改时间')),
                ('ct', models.DateTimeField(auto_now_add=True, verbose_name='提问时间')),
            ],
        ),
        migrations.CreateModel(
            name='UrlToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_token', models.CharField(max_length=100, unique=True)),
                ('amount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.BigIntegerField(unique=True, verbose_name='手机号')),
                ('code', models.CharField(max_length=6, verbose_name='验证码')),
                ('ct', models.IntegerField(default=1604647030, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.BigIntegerField(null=True, unique=True, verbose_name='手机号')),
                ('username', models.CharField(db_index=True, max_length=32, null=True, verbose_name='昵称')),
                ('email', models.CharField(max_length=30, null=True, unique=True, verbose_name='邮箱')),
                ('slogan', models.CharField(blank=True, max_length=50, verbose_name='个性签名')),
                ('sex', models.IntegerField(default=0, verbose_name='性别')),
                ('brief_introduction', models.CharField(blank=True, max_length=250, verbose_name='slogan')),
                ('url_token', models.CharField(max_length=30, unique=True, verbose_name='用户标识')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='上次登录时间')),
                ('ct', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', shrimp.models.UserManager()),
            ],
        ),
    ]
